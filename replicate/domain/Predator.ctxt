#BlueJ class context
comment0.target=Predator
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Predator\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=am\ row\ column\ active
comment1.target=Predator(AManufacturing,\ int,\ int,\ boolean)
comment1.text=\r\n\ Create\ a\ new\ Predator\ (<b>row,column</b>)\ in\ the\ aManufactuing\ <b>ac</b>..\r\n\ @param\ am\r\n\ @param\ row\r\n\ @param\ column\r\n\ @param\ active\r\n
comment10.params=
comment10.target=int\ shape()
comment10.text=\r\n\ set\ the\ shape\ as\ round\ \r\n
comment11.params=
comment11.target=char\ getState()
comment2.params=
comment2.target=int\ getRow()
comment2.text=\r\n\ return\ row\r\n
comment3.params=
comment3.target=int\ getColumn()
comment3.text=\r\n\ return\ column\r\n
comment4.params=
comment4.target=java.awt.Color\ getColor()
comment5.params=
comment5.target=void\ change()
comment5.text=\r\n\ change\ the\ state\ to\ the\ next\ state\ and\ incrase\ the\ steps\r\n
comment6.params=
comment6.target=void\ decide()
comment6.text=\r\n\ decide\ the\ next\ state,\ if\ has\ neighbours\ actives\ then\ the\ next\ state\ is\ active,\ else\ inactive.\r\n
comment7.params=
comment7.target=int\ neighborsActive()
comment8.params=dr\ dc
comment8.target=boolean\ neighborIsEmpty(int,\ int)
comment9.params=dr\ dc
comment9.target=boolean\ neighborIsOccupied(int,\ int)
comment9.text=\r\n\ return\ if\ a\ neighbor\ exist\ in\ aManufacturing\r\n
numComments=12
